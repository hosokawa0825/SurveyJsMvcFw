// Generated by CoffeeScript 1.3.3
(function() {
  var fetch, fs, jquery, jsdom, request, stringUtil, _;

  request = require('request');

  fs = require('fs');

  jsdom = require('jsdom');

  jquery = fs.readFileSync("" + __dirname + "/lib/jquery-1.7.1.min.js").toString();

  _ = require('underscore');

  stringUtil = require("./string_util.js");

  exports.scrape = function(done) {
    var func, fwNames, fws, index, name, surveyResults, url;
    fws = {
      Backbone: "https://github.com/documentcloud/backbone",
      Spine: "https://github.com/maccman/spine",
      Emberjs: "https://github.com/emberjs/ember.js",
      Angularjs: "https://github.com/angular/angular.js",
      Knockoutjs: "https://github.com/SteveSanderson/knockout",
      YUI3: "https://github.com/yui/yui3",
      Batmanjs: "https://github.com/Shopify/batman",
      Agilityjs: "https://github.com/arturadib/agility",
      Knockbackjs: "https://github.com/kmalakoff/knockback",
      jQuery: "https://github.com/jquery/jquery",
      Maria: "https://github.com/petermichaux/maria",
      Canjs: "https://github.com/jupiterjs/canjs",
      Meteor: "https://github.com/meteor/meteor",
      Derby: "https://github.com/codeparty/derby/",
      Sammy: "https://github.com/quirkey/sammy",
      Stapes: "https://github.com/hay/stapes",
      JavascriptMVC: "https://github.com/jupiterjs/javascriptmvc",
      Epitome: "https://github.com/DimitarChristoff/Epitome",
      Somajs: "https://github.com/somajs/somajs",
      Fidel: "https://github.com/jgallen23/fidel",
      Olives: "https://github.com/flams/olives",
      PlastronJS: "https://github.com/rhysbrettbowen/PlastronJS",
      Dijon: "https://github.com/creynders/dijon-framework",
      rAppidjs: "https://github.com/it-ony/rAppid.js",
      o_O: "https://github.com/weepy/o_O"
    };
    fwNames = (function() {
      var _results;
      _results = [];
      for (name in fws) {
        url = fws[name];
        _results.push(name);
      }
      return _results;
    })();
    index = 0;
    surveyResults = [];
    func = function() {
      if (index >= fwNames.length) {
        done(surveyResults);
        return;
      }
      name = fwNames[index];
      index++;
      url = fws[name];
      return fetch(url, function(err, $, isScraped) {
        var forkNum, starNum;
        starNum = $(".js-social-count").text().replace(",", "");
        forkNum = $($(".social-count")[1]).text().replace(",", "");
        surveyResults.push({
          name: name,
          starNum: starNum,
          forkNum: forkNum
        });
        return func();
      });
    };
    return func();
  };

  fetch = function(url, callback) {
    try {
      return request({
        uri: url,
        encoding: "binary"
      }, function(err, response) {
        return jsdom.env({
          html: response.body,
          src: [jquery],
          done: function(err, window) {
            if (err) {
              throw err;
            }
            response.body = stringUtil.toUtf8(response.body, window.$);
            window.close();
            return jsdom.env({
              html: response.body,
              src: [jquery],
              done: function(err, window) {
                callback(null, window.$);
                return window.close();
              }
            });
          }
        });
      });
    } catch (e) {
      return console.error(e);
    }
  };

}).call(this);
